{"version":3,"sources":["Store.js","localStorage.js","Reducer.js","Actions.js","components/TaskBar.js","pages/Splash.js","pages/Dashboard.js","pages/Chat.js","pages/FAQ.js","pages/Recovery.js","App.js","serviceWorker.js","index.js"],"names":["enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","persistedState","serializedState","localStorage","getItem","console","log","JSON","parse","err","loadState","store","createStore","state","action","type","alert","user","payload","loginUser","email","password","a","variables","fetch","method","headers","body","stringify","query","then","data","json","login","catch","error","TaskBar","_handleLogout","setItem","dispatch","className","href","alt","src","to","this","props","name","onClick","React","Component","connect","Splash","busy","_handleLoginSubmit","evt","preventDefault","setState","_handleEmailChange","target","value","_handlePasswordChange","photo","htmlFor","id","readOnly","onSubmit","onChange","placeholder","required","aria-hidden","Dashboard","Chat","FAQ","Recovery","App","exact","path","render","Boolean","location","hostname","match","subscribe","saveState","getState","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bc931390.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reducer } from './Reducer';\r\nimport { loadState } from './localStorage';\r\n\r\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n);\r\nconst persistedState = loadState() || {};\r\nconst store = createStore(reducer, persistedState, enhancer);\r\n\r\nexport default store;","export const loadState = () => {\r\n    try{\r\n        const serializedState = localStorage.getItem('projectkisaanstate');\r\n        if(serializedState === null){\r\n            return undefined;\r\n        }\r\n        console.log(\"state loaded\", serializedState);\r\n        return JSON.parse(serializedState);\r\n    } catch(err){\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n    try{\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('projectkisaanstate', serializedState);\r\n        console.log(\"state saved\", serializedState);\r\n    } catch(err){\r\n        console.log(err);\r\n    }\r\n}","export const reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"LOGIN_FAILED\": {\r\n            alert('No such user found. Check your email and password again.');\r\n            return {\r\n                ...state,\r\n                user: \"\"\r\n            };\r\n        }\r\n        case \"LOGIN_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        }\r\n        case \"LOGOUT\": {\r\n            return {\r\n                ...state,\r\n                user: \"\"\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","const serverURL= \"https://project-kisaan-graphql-server.herokuapp.com/graphql\";\r\n\r\nexport const loginUser = async(email, password) => {\r\n    let query = `query login($email: String, $password: String){login(email: $email, password: $password){name photo email}}`;\r\n    let variables = { email, password };\r\n\r\n    return user => {\r\n        fetch(serverURL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ query, variables })\r\n        }).then(data => {\r\n            return data.json();\r\n        }).then(body => {\r\n            if(body.data.login){\r\n                user({\r\n                    type: \"LOGIN_SUCCESS\",\r\n                    payload: body.data.login\r\n                });\r\n            } else {\r\n                user({\r\n                    type: \"LOGIN_FAILED\"\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            console.error(err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return user => {\r\n        user({\r\n            type: \"LOGOUT\",\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n  Link,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../Actions';\r\nimport store from '../Store';\r\n\r\nclass TaskBar extends React.Component {\r\n\r\n  _handleLogout = () => {\r\n    localStorage.setItem('projectkisaanstate', '');\r\n    store.dispatch(logoutUser());\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <>\r\n        <div className=\"header\">\r\n          <div className=\"home-menu pure-menu pure-menu-horizontal pure-menu-fixed pure-menu-scrollable\">\r\n              <a className=\"pure-menu-heading\" href=\"#\"><img alt=\"Logo\" src=\"img/logo-16.png\"/>&nbsp;<strong>Project Kisaan</strong> - Team EDGE</a>\r\n              <ul className=\"pure-menu-list\">\r\n                <HashRouter>\r\n                  <li className=\"pure-menu-item pure-menu-selected\"><Link to=\"/\" className=\"pure-menu-link\">Home</Link></li>\r\n                  {this.props.user?<><li className=\"pure-menu-item\"><Link to=\"/dashboard\" className=\"pure-menu-link\">Dashboard</Link></li><li className=\"pure-menu-item\"><Link to=\"/chat\" className=\"pure-menu-link\">Chat</Link></li></>:\"\"}\r\n                  <li className=\"pure-menu-item\"><Link to=\"/faq\" className=\"pure-menu-link\">Assistance/FAQs</Link></li>\r\n                </HashRouter>\r\n              </ul>\r\n          </div>\r\n        </div>\r\n          <div className=\"footer l-box is-center\">\r\n            {!this.props.user?<>You're not logged in.</>:<>Welcome {this.props.user.name} ({this.props.user.email}). Click here to <a href=\"#\" onClick={this._handleLogout}>logout</a></>}\r\n          </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    user: state.user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TaskBar);\r\n","import React from 'react';\r\nimport store from '../Store';\r\nimport { loginUser } from '../Actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Splash extends React.Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        busy: false,\r\n    }\r\n    componentWillReceiveProps(){\r\n        this.setState({busy: false, email: \"\", password: \"\"});\r\n    }\r\n    _handleLoginSubmit = async(evt) => {\r\n        evt.preventDefault();\r\n        this.setState({busy: true});\r\n        store.dispatch(await loginUser(this.state.email, this.state.password));\r\n    }\r\n    _handleEmailChange = (evt) => {\r\n        this.setState({email: evt.target.value});\r\n    }\r\n    _handlePasswordChange = (evt) => {\r\n        this.setState({password: evt.target.value});\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className=\"splash-container\">\r\n                    <div className=\"splash\">\r\n                        <h1 className=\"splash-head\"><img alt=\"Splash\" src=\"img/logo-128.png\"/></h1>\r\n                        <p className=\"splash-subhead\">\r\n                            Project Kisaan - As the name suggests, it's all about Kissan.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content-wrapper\">\r\n                    <div className=\"content\">\r\n                        <h2 className=\"content-head is-center\">Features</h2>\r\n                        <div className=\"pure-g\">\r\n                            <div className=\"l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4\">\r\n                                <h3 className=\"content-subhead\">\r\n                                    <i className=\"fa fa-cogs\"></i>\r\n                                    IoT Based\r\n                                </h3>\r\n                                <p>\r\n                                    AgriBot is a IoT based robot which keeps an eye over your fields and crops and keeps you updated.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4\">\r\n                                <h3 className=\"content-subhead\">\r\n                                    <i className=\"fa fa-users\"></i>\r\n                                    User Friendly\r\n                                </h3>\r\n                                <p>(\r\n                                    The AgriBot and Project Kisaan web application requires almost negligible input which makes it very user friendly.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4\">\r\n                                <h3 className=\"content-subhead\">\r\n                                    <i className=\"fa fa-eye\"></i>\r\n                                    Crop Saviour\r\n                                </h3>\r\n                                <p>\r\n                                    AgriBot comes with a rotatable high-res camera which enables it to detect insects and diseases very accurately.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4\">\r\n                                <h3 className=\"content-subhead\">\r\n                                    <i className=\"fa fa-info\"></i>\r\n                                    Lifetime Assistance\r\n                                </h3>\r\n                                <p>\r\n                                    Project Kisaan team would be very happy to help you anytime anywhere until it's alive.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <h2 className=\"content-head is-center\">{!this.props.user?\"Login to continue...\":\"More information...\"}</h2>\r\n                        <div className=\"pure-g\">\r\n                            <div className=\"l-box-lrg pure-u-1 pure-u-md-2-5\">\r\n                                {\r\n                                    !this.props.user?\r\n                                    <form className=\"pure-form pure-form-stacked\" onSubmit={this._handleLoginSubmit}>\r\n                                        <fieldset>\r\n                                            <label htmlFor=\"email\">Your Email</label>\r\n                                            <input id=\"email\" type=\"email\" value={this.state.email} onChange={this._handleEmailChange} placeholder=\"mark@example.com\" required/>\r\n                                            <label htmlFor=\"password\">Your Password</label>\r\n                                            <input id=\"password\" type=\"password\" value={this.state.password} onChange={this._handlePasswordChange} placeholder=\"*****\" required/>\r\n                                            <button type=\"submit\" className=\"pure-button\">\r\n                                                {this.state.busy?<i className=\"fa fa-spin fa-spinner\" aria-hidden=\"true\"></i>:\"\"}\r\n                                                {this.state.busy?\" Wait\":\"Login\"}\r\n                                            </button>\r\n                                        </fieldset>\r\n                                        <p>Trouble logging in? <Link to=\"/recovery\">Help</Link></p>\r\n                                    </form>:\r\n                                    <form className=\"pure-form pure-form-stacked\">\r\n                                        <div className=\"avatar-container\">\r\n                                            <img src={this.props.user.photo} className=\"avatar\" alt=\"Avatar\"></img>\r\n                                        </div>\r\n                                        <fieldset>\r\n                                            <label htmlFor=\"email\">Your Email</label>\r\n                                            <input id=\"email\" type=\"email\" value={this.props.user.email} readOnly/>\r\n                                            <label htmlFor=\"name\">Your Name</label>\r\n                                            <input id=\"name\" type=\"text\" value={this.props.user.name} readOnly/>\r\n                                        </fieldset>\r\n                                    </form>\r\n                                }\r\n                            </div>\r\n                            <div className=\"l-box-lrg pure-u-1 pure-u-md-3-5\">\r\n                                <h4>Contact Us</h4>\r\n                                <p>\r\n                                    Our team is there to help you 24x7. You can clear your questions or doubts in our <a href=\"#\">Assistance/FAQs</a> section.\r\n                                    More more information, you can mail us at <a href=\"mailto:help.projectkisaan@mail.com\">help.projectkisaan@mail.com</a>.\r\n                                </p>\r\n                                <h4>Interested in AgriBot?</h4>\r\n                                <p>\r\n                                    You can express your interest for purchasing AgriBot by writing to us at <a href=\"mailto:purchase.projectkisaan@mail.com\">purchase.projectkisaan@mail.com</a>.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )   \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n      user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Splash);","import React from 'react';\r\n\r\nexport default class Dashboard extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>Dashboard</div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Chat extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>Chat</div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class FAQ extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>FAQ</div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Recovery extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>Recovery</div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport TaskBar from './components/TaskBar';\nimport Splash from './pages/Splash';\nimport Dashboard from './pages/Dashboard';\nimport Chat from './pages/Chat';\nimport FAQ from './pages/FAQ';\nimport Recovery from './pages/Recovery';\nimport './App.css';\nimport { Route, HashRouter } from 'react-router-dom';\n\nclass App extends React.Component {\n  render(){\n    return (\n      <>\n        <TaskBar />\n        <HashRouter>\n          <Route exact path=\"/\" render={() => <Splash />}></Route>\n          <Route path=\"/dashboard\" render={() => <Dashboard/>}></Route>\n          <Route path=\"/chat\" render={() => <Chat/>}></Route>\n          <Route path=\"/faq\" render={() => <FAQ/>}></Route>\n          <Route path=\"/recovery\" render={() => <Recovery/>}></Route>\n        </HashRouter>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'purecss/build/pure.css';\nimport 'purecss/build/grids-responsive.css';\nimport store from './Store';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { saveState } from './localStorage';\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}