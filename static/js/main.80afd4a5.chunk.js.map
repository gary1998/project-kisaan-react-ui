{"version":3,"sources":["Store.js","Reducer.js","components/TaskBar.js","Actions.js","pages/Splash.js","App.js","serviceWorker.js","index.js"],"names":["enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","state","action","type","alert","Object","assign","user","payload","email","photo","name","AppBar","className","href","alt","src","this","props","React","Component","loginUser","password","a","variables","fetch","method","headers","body","JSON","stringify","query","then","data","json","login","catch","err","console","error","Splash","busy","_handleLoginSubmit","evt","preventDefault","setState","dispatch","_handleEmailChange","target","value","_handlePasswordChange","onSubmit","htmlFor","id","onChange","placeholder","required","aria-hidden","App","subscribe","getState","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0MAKMA,GADqC,kBAAXC,QAAuBA,OAAOC,qCAAuCD,OAAOC,qCAAqC,IAAMC,KAErJC,YAAgBC,MAWHC,EARDC,aCTS,SAACC,EAAOC,GAC3B,OAAOA,EAAOC,MACV,IAAK,eACDC,MAAM,4DAEV,IAAK,gBACD,OAAOC,OAAOC,OAAOL,EAAO,CACxBM,KAAML,EAAOM,UAGrB,QACI,OAAOP,KDFgB,CAC/BM,KAAM,CACJE,MAAO,GACPC,MAAO,GACPC,KAAM,KAETlB,G,oEEbkBmB,E,uKAEjB,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,iFACX,uBAAGA,UAAU,oBAAoBC,KAAK,KAAI,yBAAKC,IAAI,OAAOC,IAAI,oBAA9D,OAAuF,kDAAvF,gBACA,wBAAIH,UAAU,kBACV,wBAAIA,UAAU,qCAAoC,uBAAGC,KAAK,IAAID,UAAU,kBAAtB,SACjDI,KAAKC,MAAMnB,MAAMQ,KAAK,oCAAE,wBAAIM,UAAU,kBAAiB,uBAAGC,KAAK,IAAID,UAAU,kBAAtB,cAAyD,wBAAIA,UAAU,kBAAiB,uBAAGC,KAAK,IAAID,UAAU,kBAAtB,UAAwD,GACxM,wBAAIA,UAAU,kBAAiB,uBAAGC,KAAK,IAAID,UAAU,kBAAtB,2B,GATXM,IAAMC,W,uBCA7BC,EAAS,uCAAG,WAAMZ,EAAOa,GAAb,eAAAC,EAAA,0KAEjBC,EAAY,CAAEf,QAAOa,YAFJ,mBAId,SAAAf,GACHkB,MAPS,8DAOQ,CACbC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEC,MAVV,8GAUiBP,gBAC/BQ,MAAK,SAAAC,GACJ,OAAOA,EAAKC,UACbF,MAAK,SAAAJ,GACDA,EAAKK,KAAKE,MACT5B,EAAK,CACDJ,KAAM,gBACNK,QAASoB,EAAKK,KAAKE,QAGvB5B,EAAK,CACDJ,KAAM,oBAGfiC,OAAM,SAAAC,GACLC,QAAQC,MAAMF,SAzBD,2CAAH,wDCEDG,E,4MACjBvC,MAAQ,CACJQ,MAAO,GACPa,SAAU,GACVmB,MAAM,G,EAKVC,mB,uCAAqB,WAAMC,GAAN,SAAApB,EAAA,6DACjBoB,EAAIC,iBACJ,EAAKC,SAAS,CAACJ,MAAM,IAFJ,KAGjB1C,EAHiB,SAGIsB,EAAU,EAAKpB,MAAMQ,MAAO,EAAKR,MAAMqB,UAH3C,wBAGXwB,SAHW,2D,wDAKrBC,mBAAqB,SAACJ,GAClB,EAAKE,SAAS,CAACpC,MAAOkC,EAAIK,OAAOC,S,EAErCC,sBAAwB,SAACP,GACrB,EAAKE,SAAS,CAACvB,SAAUqB,EAAIK,OAAOC,S,0EAXpChC,KAAK4B,SAAS,CAACJ,MAAM,EAAOhC,MAAO,GAAIa,SAAU,O,+BAcjD,OACI,oCACI,yBAAKT,UAAU,oBACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,eAAc,yBAAKE,IAAI,SAASC,IAAI,sBAClD,uBAAGH,UAAU,kBAAb,mEAKR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,WACX,wBAAIA,UAAU,0BAAd,YACA,yBAAKA,UAAU,UACX,yBAAKA,UAAU,8CACX,wBAAIA,UAAU,mBACV,uBAAGA,UAAU,eADjB,aAIA,iIAIJ,yBAAKA,UAAU,8CACX,wBAAIA,UAAU,mBACV,uBAAGA,UAAU,gBADjB,iBAIA,oJAIJ,yBAAKA,UAAU,8CACX,wBAAIA,UAAU,mBACV,uBAAGA,UAAU,cADjB,gBAIA,+IAIJ,yBAAKA,UAAU,8CACX,wBAAIA,UAAU,mBACV,uBAAGA,UAAU,eADjB,uBAIA,wHAMZ,yBAAKA,UAAU,WACX,wBAAIA,UAAU,0BAAd,wBACA,yBAAKA,UAAU,UACX,yBAAKA,UAAU,oCACX,0BAAMA,UAAU,8BAA8BsC,SAAUlC,KAAKyB,oBACzD,kCACI,2BAAOU,QAAQ,SAAf,cACA,2BAAOC,GAAG,QAAQlD,KAAK,QAAQ8C,MAAOhC,KAAKhB,MAAMQ,MAAO6C,SAAUrC,KAAK8B,mBAAoBQ,YAAY,mBAAmBC,UAAQ,IAClI,2BAAOJ,QAAQ,YAAf,iBACA,2BAAOC,GAAG,WAAWlD,KAAK,WAAW8C,MAAOhC,KAAKhB,MAAMqB,SAAUgC,SAAUrC,KAAKiC,sBAAuBK,YAAY,QAAQC,UAAQ,IACnI,4BAAQrD,KAAK,SAASU,UAAU,eAC3BI,KAAKhB,MAAMwC,KAAK,uBAAG5B,UAAU,wBAAwB4C,cAAY,SAAY,GAC7ExC,KAAKhB,MAAMwC,KAAK,QAAQ,UAGjC,kDAAuB,uBAAG3B,KAAK,KAAR,WAG/B,yBAAKD,UAAU,oCACX,0CACA,gHACsF,uBAAGC,KAAK,KAAR,mBADtF,uDAE8C,uBAAGA,KAAK,sCAAR,+BAF9C,KAIA,sDACA,uGAC6E,uBAAGA,KAAK,0CAAR,mCAD7E,QAMZ,yBAAKD,UAAU,0BAAf,+B,GAxGgBM,IAAMC,WCwB3BsC,G,wDAjBb,WAAYxC,GAAO,IAAD,8BAChB,cAAMA,IALRjB,MAAQ,CACNF,MAAO,IAKPA,EAAM4D,WAAU,WACd,EAAKd,SAAS,CAAC9C,MAAOA,EAAM6D,gBAHd,E,qDAQhB,OACE,oCACE,kBAAC,EAAD,CAAS7D,MAAOkB,KAAKhB,MAAMF,QAC3B,kBAAC,EAAD,CAAQA,MAAOkB,KAAKhB,MAAMF,a,GAhBhBoB,IAAMC,YCMJyC,QACW,cAA7BnE,OAAOoE,SAASC,UAEe,UAA7BrE,OAAOoE,SAASC,UAEhBrE,OAAOoE,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAD,CAAUnE,MAAOA,GACf,kBAAC,EAAD,OAEFoE,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvC,MAAK,SAAAwC,GACJA,EAAaC,gBAEdrC,OAAM,SAAAG,GACLD,QAAQC,MAAMA,EAAMmC,c","file":"static/js/main.80afd4a5.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {reducer} from './Reducer';\r\n\r\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n);\r\n\r\nconst store = createStore(reducer, {\r\n    user: {\r\n      email: '',\r\n      photo: '',\r\n      name: '', \r\n    },\r\n}, enhancer);\r\n\r\nexport default store;","export const reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"LOGIN_FAILED\": {\r\n            alert('No such user found. Check your email and password again.');\r\n        }\r\n        case \"LOGIN_SUCCESS\": {\r\n            return Object.assign(state, {\r\n                user: action.payload\r\n            });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class AppBar extends React.Component {\r\n  render(){\r\n    return(\r\n      <div className=\"header\">\r\n        <div className=\"home-menu pure-menu pure-menu-horizontal pure-menu-fixed pure-menu-scrollable\">\r\n            <a className=\"pure-menu-heading\" href=\"#\"><img alt=\"Logo\" src=\"img/logo-16.png\"/>&nbsp;<strong>Project Kisaan</strong> - Team EDGE</a>\r\n            <ul className=\"pure-menu-list\">\r\n                <li className=\"pure-menu-item pure-menu-selected\"><a href=\"#\" className=\"pure-menu-link\">Home</a></li>\r\n                {this.props.store.user?<><li className=\"pure-menu-item\"><a href=\"#\" className=\"pure-menu-link\">Dashboard</a></li><li className=\"pure-menu-item\"><a href=\"#\" className=\"pure-menu-link\">Chat</a></li></>:\"\"}\r\n                <li className=\"pure-menu-item\"><a href=\"#\" className=\"pure-menu-link\">Assistance/FAQs</a></li>\r\n            </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const serverURL= \"https://project-kisaan-graphql-server.herokuapp.com/graphql\";\r\n\r\nexport const loginUser = async(email, password) => {\r\n    let query = `query login($email: String, $password: String){login(email: $email, password: $password){name photo email}}`;\r\n    let variables = { email, password };\r\n\r\n    return user => {\r\n        fetch(serverURL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ query, variables })\r\n        }).then(data => {\r\n            return data.json();\r\n        }).then(body => {\r\n            if(body.data.login){\r\n                user({\r\n                    type: \"LOGIN_SUCCESS\",\r\n                    payload: body.data.login\r\n                });\r\n            } else {\r\n                user({\r\n                    type: \"LOGIN_FAILED\"\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            console.error(err);\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport store from '../Store';\r\nimport { loginUser } from '../Actions';\r\n\r\nexport default class Splash extends React.Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        busy: false\r\n    }\r\n    componentWillReceiveProps(){\r\n        this.setState({busy: false, email: \"\", password: \"\"});\r\n    }\r\n    _handleLoginSubmit = async(evt) => {\r\n        evt.preventDefault();\r\n        this.setState({busy: true});\r\n        store.dispatch(await loginUser(this.state.email, this.state.password));\r\n    }\r\n    _handleEmailChange = (evt) => {\r\n        this.setState({email: evt.target.value});\r\n    }\r\n    _handlePasswordChange = (evt) => {\r\n        this.setState({password: evt.target.value});\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className=\"splash-container\">\r\n                    <div className=\"splash\">\r\n                        <h1 className=\"splash-head\"><img alt=\"Splash\" src=\"img/logo-128.png\"/></h1>\r\n                        <p className=\"splash-subhead\">\r\n                            Project Kisaan - As the name suggests, it's all about Kissan.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content-wrapper\">\r\n                    <div className=\"content\">\r\n                        <h2 className=\"content-head is-center\">Features</h2>\r\n                        <div className=\"pure-g\">\r\n                            <div className=\"l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4\">\r\n                                <h3 className=\"content-subhead\">\r\n                                    <i className=\"fa fa-cogs\"></i>\r\n                                    IoT Based\r\n                                </h3>\r\n                                <p>\r\n                                    AgriBot is a IoT based robot which keeps an eye over your fields and crops and keeps you updated.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4\">\r\n                                <h3 className=\"content-subhead\">\r\n                                    <i className=\"fa fa-users\"></i>\r\n                                    User Friendly\r\n                                </h3>\r\n                                <p>(\r\n                                    The AgriBot and Project Kisaan web application requires almost negligible input which makes it very user friendly.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4\">\r\n                                <h3 className=\"content-subhead\">\r\n                                    <i className=\"fa fa-eye\"></i>\r\n                                    Crop Saviour\r\n                                </h3>\r\n                                <p>\r\n                                    AgriBot comes with a rotatable high-res camera which enables it to detect insects and diseases very accurately.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4\">\r\n                                <h3 className=\"content-subhead\">\r\n                                    <i className=\"fa fa-info\"></i>\r\n                                    Lifetime Assistance\r\n                                </h3>\r\n                                <p>\r\n                                    Project Kisaan team would be very happy to help you anytime anywhere until it's alive.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <h2 className=\"content-head is-center\">Login to continue...</h2>\r\n                        <div className=\"pure-g\">\r\n                            <div className=\"l-box-lrg pure-u-1 pure-u-md-2-5\">\r\n                                <form className=\"pure-form pure-form-stacked\" onSubmit={this._handleLoginSubmit}>\r\n                                    <fieldset>\r\n                                        <label htmlFor=\"email\">Your Email</label>\r\n                                        <input id=\"email\" type=\"email\" value={this.state.email} onChange={this._handleEmailChange} placeholder=\"mark@example.com\" required/>\r\n                                        <label htmlFor=\"password\">Your Password</label>\r\n                                        <input id=\"password\" type=\"password\" value={this.state.password} onChange={this._handlePasswordChange} placeholder=\"*****\" required/>\r\n                                        <button type=\"submit\" className=\"pure-button\">\r\n                                            {this.state.busy?<i className=\"fa fa-spin fa-spinner\" aria-hidden=\"true\"></i>:\"\"}\r\n                                            {this.state.busy?\" Wait\":\"Login\"}\r\n                                        </button>\r\n                                    </fieldset>\r\n                                    <p>Trouble logging in? <a href=\"#\">Help</a></p>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"l-box-lrg pure-u-1 pure-u-md-3-5\">\r\n                                <h4>Contact Us</h4>\r\n                                <p>\r\n                                    Our team is there to help you 24x7. You can clear your questions or doubts in our <a href=\"#\">Assistance/FAQs</a> section.\r\n                                    More more information, you can mail us at <a href=\"mailto:help.projectkisaan@mail.com\">help.projectkisaan@mail.com</a>.\r\n                                </p>\r\n                                <h4>Interested in AgriBot?</h4>\r\n                                <p>\r\n                                    You can express your interest for purchasing AgriBot by writing to us at <a href=\"mailto:purchase.projectkisaan@mail.com\">purchase.projectkisaan@mail.com</a>.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"footer l-box is-center\">\r\n                        You're not logged in.\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )   \r\n    }\r\n}","import store from './Store';\nimport React from 'react';\nimport TaskBar from './components/TaskBar';\nimport Splash from './pages/Splash';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    store: {}\n  };\n\n  constructor(props){\n    super(props);\n    store.subscribe(() => {\n      this.setState({store: store.getState()})\n    });\n  }\n\n  render(){\n    return (\n      <>\n        <TaskBar store={this.state.store}/>\n        <Splash store={this.state.store}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'purecss/build/pure.css';\nimport 'purecss/build/grids-responsive.css';\nimport store from './Store';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}